---
// üîç P√°gina de detalle de Pok√©mon individual
// Muestra informaci√≥n completa con funcionalidad de favoritos

import { getPokemonById, isFavorite } from '../../services/pokemonDB';
import { getPokemonDetails } from '../../services/pokemon';
import MainLayout from '../../layouts/MainLayout.astro';

// üìã Obtener par√°metros de la URL
const { id } = Astro.params;

// üîç Validar el ID
if (!id || isNaN(Number(id))) {
  return Astro.redirect('/404');
}

const pokemonId = Number(id);

// üì± Obtener datos del Pok√©mon
let pokemon;
let pokemonDetails;
let isCurrentlyFavorite = false;

try {
  // üéØ Datos b√°sicos desde nuestro servicio
  pokemon = await getPokemonById(pokemonId);
  
  if (!pokemon) {
    return Astro.redirect('/404');
  }
  
  // üåü Detalles completos desde Pok√©API
  pokemonDetails = await getPokemonDetails(pokemonId);
  
  // üíñ Estado de favorito
  isCurrentlyFavorite = await isFavorite(pokemonId);
  
} catch (error) {
  console.error(`Error obteniendo datos del Pok√©mon ${pokemonId}:`, error);
  return Astro.redirect('/');
}

// üé® Metadatos de la p√°gina
const pageTitle = `${pokemon.name.charAt(0).toUpperCase() + pokemon.name.slice(1)} (#${pokemonId}) - PokeDB`;
const pageDescription = `Informaci√≥n detallada de ${pokemon.name}, incluyendo stats, tipos y habilidades. Pok√©mon #${pokemonId} en PokeDB.`;
---

<MainLayout title={pageTitle} description={pageDescription}>
  <!-- üîô Navegaci√≥n -->
  <div class="pt-8 px-4">
    <div class="max-w-7xl mx-auto">
      <a 
        href="/"
        class="inline-flex items-center gap-2 px-4 py-2 bg-white/80 dark:bg-gray-800/80 backdrop-blur-sm rounded-lg shadow-md hover:shadow-lg transition-all duration-300 text-gray-700 dark:text-gray-300 hover:text-purple-600 dark:hover:text-purple-400"
      >
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
        </svg>
        Volver a la Pok√©dex
      </a>
    </div>
  </div>

  <!-- üé® Contenido principal -->
  <section class="py-4 md:py-16 px-4">
    <div class="max-w-7xl mx-auto">
      
      <!-- üÉè Tarjeta principal del Pok√©mon -->
      <div class="bg-white/95 dark:bg-gray-800/95 backdrop-blur-sm rounded-3xl shadow-2xl p-8 mb-8">
        <div class="grid md:grid-cols-2 gap-8 items-center">
          
          <!-- üñºÔ∏è Imagen y datos b√°sicos -->
          <div class="text-center">
            <div class="relative inline-block">
              <img 
                src={pokemon.sprite}
                alt={`Sprite de ${pokemon.name}`}
                width="200"
                height="200"
                class="w-48 h-48 mx-auto object-contain"
                loading="eager"
                decoding="sync"
              />
              
              <!-- üíñ Bot√≥n de favorito -->
              <button 
                id="favorite-btn"
                data-pokemon-id={pokemonId}
                data-is-favorite={isCurrentlyFavorite}
                class="absolute top-0 right-0 w-12 h-12 rounded-full bg-white/90 dark:bg-gray-800/90 shadow-lg flex items-center justify-center text-2xl hover:scale-110 transition-all duration-300"
                aria-label={isCurrentlyFavorite ? "Quitar de favoritos" : "A√±adir a favoritos"}
              >
                <span id="heart-icon">{isCurrentlyFavorite ? '‚ù§Ô∏è' : 'ü§ç'}</span>
              </button>
            </div>
            
            <!-- üìä ID y nombre -->
            <div class="mt-6">
              <div class="text-lg font-mono text-gray-500 dark:text-gray-400 mb-2">
                #{pokemonId.toString().padStart(3, '0')}
              </div>
              <h1 class="text-4xl font-bold text-gray-800 dark:text-white capitalize mb-4">
                {pokemon.name}
              </h1>
            </div>
          </div>
          
          <!-- üìà Informaci√≥n detallada -->
          <div class="space-y-6">
            
            <!-- üè∑Ô∏è Tipos -->
            {pokemonDetails.types && pokemonDetails.types.length > 0 && (
              <div>
                <h3 class="text-lg font-semibold text-gray-700 dark:text-gray-300 mb-3">Tipos</h3>
                <div class="flex gap-2">
                  {pokemonDetails.types.map((typeInfo) => (
                    <span class="px-3 py-1 rounded-full text-sm font-medium text-white bg-gradient-to-r from-purple-500 to-blue-500">
                      {typeInfo.type.name}
                    </span>
                  ))}
                </div>
              </div>
            )}
            
            <!-- üìè Medidas -->
            <div class="grid grid-cols-2 gap-4">
              <div class="text-center p-4 bg-gray-50 dark:bg-gray-700 rounded-lg">
                <div class="text-2xl font-bold text-purple-600 dark:text-purple-400">
                  {(pokemonDetails.height / 10).toFixed(1)}m
                </div>
                <div class="text-sm text-gray-600 dark:text-gray-400">Altura</div>
              </div>
              <div class="text-center p-4 bg-gray-50 dark:bg-gray-700 rounded-lg">
                <div class="text-2xl font-bold text-blue-600 dark:text-blue-400">
                  {(pokemonDetails.weight / 10).toFixed(1)}kg
                </div>
                <div class="text-sm text-gray-600 dark:text-gray-400">Peso</div>
              </div>
            </div>
            
            <!-- üìä Stats principales -->
            {pokemonDetails.stats && pokemonDetails.stats.length > 0 && (
              <div>
                <h3 class="text-lg font-semibold text-gray-700 dark:text-gray-300 mb-3">Estad√≠sticas</h3>
                <div class="space-y-2">
                  {pokemonDetails.stats.slice(0, 6).map((stat) => (
                    <div class="flex items-center gap-3">
                      <div class="w-28 text-sm text-gray-600 dark:text-gray-400 capitalize">
                        {stat.stat.name}
                      </div>
                      <div class="flex-1 bg-gray-200 dark:bg-gray-600 rounded-full h-2">
                        <div 
                          class="bg-gradient-to-r from-green-400 to-blue-500 h-2 rounded-full transition-all duration-300"
                          style={`width: ${Math.min(stat.base_stat / 150 * 100, 100)}%`}
                        ></div>
                      </div>
                      <div class="w-8 text-sm font-semibold text-gray-700 dark:text-gray-300">
                        {stat.base_stat}
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  </section>
</MainLayout>

<!-- üéÆ JavaScript para funcionalidad de favoritos -->
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const favoriteBtn = document.getElementById('favorite-btn');
    const heartIcon = document.getElementById('heart-icon');
    
    if (!favoriteBtn || !heartIcon) return;
    
    favoriteBtn.addEventListener('click', async function() {
      const pokemonId = this.dataset.pokemonId;
      const currentlyFavorite = this.dataset.isFavorite === 'true';
      
      try {
        // üåê Llamar a la API
        const response = await fetch('/api/favorites', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            pokemonId: parseInt(pokemonId || '0'),
            action: currentlyFavorite ? 'remove' : 'add'
          })
        });
        
        if (response.ok) {
          // üé® Actualizar UI
          const newFavoriteState = !currentlyFavorite;
          this.dataset.isFavorite = newFavoriteState.toString();
          heartIcon.textContent = newFavoriteState ? '‚ù§Ô∏è' : 'ü§ç';
          
          // üé™ Animaci√≥n de feedback
          this.style.transform = 'scale(1.2)';
          setTimeout(() => {
            this.style.transform = 'scale(1)';
          }, 150);
          
          console.log(`üíñ Pok√©mon ${pokemonId} ${newFavoriteState ? 'a√±adido a' : 'removido de'} favoritos`);
        } else {
          console.error('Error en la respuesta del servidor');
        }
        
      } catch (error) {
        console.error('Error al actualizar favoritos:', error);
      }
    });
  });
</script>
