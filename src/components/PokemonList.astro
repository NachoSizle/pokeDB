---
// üìã Lista de Pok√©mon - Grid responsivo optimizado
import type { PokemonData } from '../services/pokemonDB';
import PokemonCard from './PokemonCard.astro';
import { getAllPokemon } from '../services/pokemonDB';

// üéÆ Obtener todos los Pok√©mon con cach√© TTL
const allPokemons = await getAllPokemon();

export interface Props {
  pokemons?: PokemonData[];
}

let { pokemons } = Astro.props;

// Si no se pasan Pok√©mon, usar todos los disponibles
if (!pokemons || pokemons.length === 0) {
  pokemons = allPokemons;
}
---

<div class="w-full max-w-7xl mx-auto">
  <section class="space-y-8" aria-labelledby="pokemon-list-heading">
    <h2 id="pokemon-list-heading" class="sr-only">Lista completa de Pok√©mon disponibles</h2>
    
    <!-- Grid de Pok√©mon -->
    {pokemons.length > 0 ? (
      <div 
        class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 justify-items-center" 
        role="grid" 
        aria-label={`Grid con ${pokemons.length} Pok√©mon disponibles`}
      >
        {pokemons.map((pokemon) => (
          <div class="w-full max-w-sm" role="gridcell">
            <PokemonCard pokemon={pokemon} />
          </div>
        ))}
      </div>
    ) : (
      <div class="text-center py-16" role="status" aria-live="polite">
        <div class="text-6xl mb-4" aria-hidden="true">üîç</div>
        <h3 class="text-xl font-semibold text-slate-300 mb-2">No se encontraron Pok√©mon</h3>
        <p class="text-slate-400">Intenta ajustar tu b√∫squeda o navegar por las p√°ginas disponibles.</p>
      </div>
    )}
  </section>
</div>

<!-- Efectos visuales adicionales -->
<style>
  .grid {
    animation: fadeInUp 0.6s ease-out;
  }
  
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>
